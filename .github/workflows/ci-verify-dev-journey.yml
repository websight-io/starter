# Copyright (C) 2022 Dynamic Solutions
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'CI: verify dev journey'

on:
  pull_request:

permissions:
  id-token: write
  contents: read

env:
  APP_LC_FRONTEND_MODULE: applications/luna-low-code/frontend
  APP_CC_FRONTEND_MODULE: applications/luna-custom-code/frontend

jobs:
  verify-dev-journey:
    name: Verify dev journey
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WEBSIGHT_RELEASES_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_WEBSIGHT_SNAPSHOTS_SNAPSHOT_READ_SA }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'

      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.APP_LC_FRONTEND_MODULE }}/node
            ${{ env.APP_LC_FRONTEND_MODULE }}/node_modules
            ${{ env.APP_CC_FRONTEND_MODULE }}/node
            ${{ env.APP_CC_FRONTEND_MODULE }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Build and install Nodejs, NPM, and Cypress
        run: ./mvnw --batch-mode clean package -De2e.skip=false

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: ds/websight-cms-starter:latest

      - name: Run environment
        run: |
          docker run -d -p 8080:8080 --name websight-cms --rm --mount source=segment-store-repository,target=/websight/launcher/repository ds/websight-cms-starter:latest
          echo "Waiting for the environment to be ready..."
          timeout 300 bash -c 'until curl -s -f -o /dev/null -w "%{http_code}" http://localhost:8080/system/health; do echo " - waiting for the server..."; sleep 1; done'

      - name: Verify environment
        run: ./.github/scripts/dev-journey-1-verify-env.sh

      - name: Prepare project changes
        run: ./.github/scripts/dev-journey-2-prepare-project-changes.sh

      - name: Install changes
        run: ./mvnw -f ./applications/luna-custom-code/backend/pom.xml clean install -P autoInstallBundle

      - name: Validate if functional tests detect changes
        run: ./.github/scripts/dev-journey-3-validate-functional-tests.sh

      - name: Update functional tests
        run: ./.github/scripts/dev-journey-4-update-functionals.sh

      - name: Validate functional tests
        run: npm run-script test --prefix ./tests/end-to-end
        
      - name: Clear snapshots before caching
        if: always()
        run: find ~/.m2/repository/pl/ds -name "*-SNAPSHOT" -type d -print -prune -exec rm -r "{}" \;
