# Copyright (C) 2022 Dynamic Solutions
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Ephemeral environment - create

on:
  workflow_dispatch:

env:
  APP_FRONTEND_MODULE: application/frontend
  E2E_TESTS_MODULE: tests/end-to-end

jobs:
  create-ephemeral-env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'
      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.APP_FRONTEND_MODULE }}/node
            ${{ env.APP_FRONTEND_MODULE }}/node_modules
            ${{ env.E2E_TESTS_MODULE }}/node
            ${{ env.E2E_TESTS_MODULE }}/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          credentials_json: ${{ secrets.GCP_SERVICE_CREDENTIALS_JSON }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: europe-west1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build image and push to registry
        run: ./mvnw --batch-mode install -DskipITs -Ddocker.cms-project.name=europe-west1-docker.pkg.dev/websight-dxp-development/cms-starter/websight-cms-starter -Ddocker.cms-project.tag=${{ github.sha }} -P release-image

      - name: Deploy new Cloud Run service
        run: |
          export IMAGE_REGISTRY="europe-west1-docker.pkg.dev/websight-dxp-development/cms-starter"
          export ENV_NAME_POSTFIX=$(echo ${{ github.ref_name }} | sed 's/[^a-zA-Z0-9]/-/g' | cut -c 1-40)
          export IMAGE_TAG=${{ github.sha }}
          envsubst < environment/remote-gcp-cloudrun/service.tmpl.yaml | gcloud run services replace --region=europe-west1 -
          gcloud run services add-iam-policy-binding websight-cms-$ENV_NAME_POSTFIX \
            --member="allUsers" \
            --role="roles/run.invoker" \
            --region=europe-west1

      - name: Clear snapshots before caching
        if: always()
        run: find ~/.m2/repository/pl/ds -name "*-SNAPSHOT" -type d -print -prune -exec rm -r "{}" \;